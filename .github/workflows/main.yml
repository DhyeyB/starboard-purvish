name: Appium CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest 
    strategy:
      matrix:
        api-level: [29] 
        target: [playstore]
    steps:
    - uses: actions/checkout@v4 

    # - name: install FFMPEG
    #   run: |
    #     brew install ffmpeg

    # - name: run FFMPEG
    #   run: |
    #     # ffmpeg -f avfoundation -i "0" uyvy422 -t 00:05:00 output.mp4 &
    #     ffmpeg -f avfoundation -i "0" -r 30 -pix_fmt yuv420p -probesize 50M output.mkv &
  
    # - name: Sleep
    #   run: sleep 5

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    - name: Use Node.js 18
      uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3
      with:
        node-version: 18.18.2

    - name: Install and Run Appium Server
      run: |
        npm install -g appium@v1.22
        appium -v
        npm -g install npm
        appium > /dev/null &

        
    - name: Run Appium Tests
      uses: reactivecircus/android-emulator-runner@v2 
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        profile: Nexus 6
        script: |
          adb install apk/Starboard-dev.apk
          adb shell pm clear com.google.android.gm
          adb shell pm clear com.impossible_research.sandbox.starboard
          mvn clean test

    - name: upload app
      if: always()
      continue-on-error: true
      uses: actions/upload-artifact@master
      with:
        name: Desktop Application
        path: |
          ./target/allure-results

    # - name: Stop Recording
    #   continue-on-error: true
    #   shell: bash
    #   run: |
    #     PID=$(ps aux | grep -m 1 ffmpeg | awk '{print $2}')
    #     python -c "import os, signal; os.kill($PID, signal.SIGINT)"

    # - name: upload video
    #   if: always()
    #   continue-on-error: true
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: Recording
    #     path: output.mkv

